# SPDX-License-Identifier: MIT
name: Build
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: espressif/idf:release-v4.4
    steps:
    - name: Checkout AtomVM
      uses: actions/checkout@v3
      with:
        repository: atomvm/AtomVM
        path: AtomVM
    - name: Checkout M5Unified
      uses: actions/checkout@v3
      with:
        repository: m5stack/M5Unified
        path: AtomVM/src/platform/esp32/components/
    - name: Checkout M5GFX
      uses: actions/checkout@v3
      with:
        repository: m5stack/M5GFX
        path: AtomVM/src/platform/esp32/components/
    - name: Checkout atomvm_m5
      uses: actions/checkout@v3
      with:
        path: AtomVM/src/platform/esp32/components/
    - name: Build with idf.py
      shell: bash
      working-directory: AtomVM/src/platforms/esp32/
      run: |
        . $IDF_PATH/export.sh
        idf.py reconfigure
        idf.py build

  build-doc:
    runs-on: ubuntu-latest
    container: erlang:26
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build edoc
        run: |
          rebar3 edoc
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: doc

  clang-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install clang-format
        run: |
            sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
      - name: Install run-clang-format
        run: |
            curl -sSfL https://raw.githubusercontent.com/Sarcasm/run-clang-format/master/run-clang-format.py -o run-clang-format
            chmod +x run-clang-format
      - name: Check format with clang-format
        run: |
            ./run-clang-format --style=file -r nifs/

  erlfmt:
    runs-on: ubuntu-latest
    container: erlang:26
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Checkout erlfmt
        run: |
            cd ..
            git clone --depth 1 -b v1.1.0 https://github.com/WhatsApp/erlfmt.git
            cd erlfmt
            rebar3 as release escriptize
      - name: Check format with erlfmt
        run: |
            find . -name *.erl | xargs ../erlfmt/_build/release/bin/erlfmt -c
